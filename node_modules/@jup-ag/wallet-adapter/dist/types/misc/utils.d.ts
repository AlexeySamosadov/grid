import { RefObject } from 'react';
export declare const numberFormatter: Intl.NumberFormat;
export declare const formatNumber: {
    format: (val?: number, precision?: number) => string;
};
export declare function shortenAddress(address: string, chars?: number): string;
export declare function fromLamports(lamportsAmount?: number, decimals?: number, rate?: number): number;
export declare function toLamports(lamportsAmount: number, decimals: number): number;
export declare function useReactiveEventListener(eventName: string, handler: (event: any) => void, element?: (Window & typeof globalThis) | null): void;
export declare const isMobile: () => boolean;
export declare const detectedSeparator: string;
export declare function useOutsideClick(ref: RefObject<HTMLElement>, handler: (e: MouseEvent) => void): void;
export declare function useDebouncedEffect(fn: Function, deps: any[], time: number): void;
/**
 * Users on iOS can be redirected into a wallet's in-app browser automatically,
 * if that wallet has a universal link configured to do so
 * But should not be redirected from within a webview, eg. if they're already
 * inside a wallet's browser
 * This function can be used to identify users who are on iOS and can be redirected
 *
 * @returns true if the user can be redirected
 */
export declare function isIosAndRedirectable(): boolean;
